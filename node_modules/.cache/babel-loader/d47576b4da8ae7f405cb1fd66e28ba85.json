{"ast":null,"code":"import _slicedToArray from \"/Users/reggiemorgan/Dev2020/LeasePlan/lease-plan-currency-converter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reggiemorgan/Dev2020/LeasePlan/lease-plan-currency-converter/src/App.js\";\nimport React, { useState } from 'react';\nimport CurrencyConverter from './components';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles'; // let theme = createMuiTheme();\n// ToDo\n// Breakpoints for responsive\n// Tests\n// input validation (empty and only numerical)\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        darkMode = _useState2[0],\n        toggleDarkMode = _useState2[1];\n\n  let theme = React.useMemo(() => createMuiTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light'\n    }\n  }), [prefersDarkMode]);\n  theme = responsiveFontSizes(theme);\n  const type = theme.palette.type;\n  return React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => toggleDarkMode(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Go Dark\"), React.createElement(CurrencyConverter, {\n    themeType: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/reggiemorgan/Dev2020/LeasePlan/lease-plan-currency-converter/src/App.js"],"names":["React","useState","CurrencyConverter","useMediaQuery","createMuiTheme","ThemeProvider","responsiveFontSizes","App","prefersDarkMode","darkMode","toggleDarkMode","theme","useMemo","palette","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,mBAAxC,QAAmE,0BAAnE,C,CAEA;AAEA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACX,QAAMC,eAAe,GAAGL,aAAa,CAAC,8BAAD,CAArC;;AADW,oBAEwBF,QAAQ,CAAC,KAAD,CAFhC;AAAA;AAAA,QAEJQ,QAFI;AAAA,QAEMC,cAFN;;AAGX,MAAIC,KAAK,GAAGX,KAAK,CAACY,OAAN,CACR,MACIR,cAAc,CAAC;AACXS,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAEL,QAAQ,GAAG,MAAH,GAAY;AADrB;AADE,GAAD,CAFV,EAOR,CAACD,eAAD,CAPQ,CAAZ;AASAG,EAAAA,KAAK,GAAGL,mBAAmB,CAACK,KAAD,CAA3B;AACA,QAAMG,IAAI,GAAGH,KAAK,CAACE,OAAN,CAAcC,IAA3B;AAEA,SACM,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEH,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMD,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEE,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEI,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADN;AAMH;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport CurrencyConverter from './components';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\n\n// let theme = createMuiTheme();\n\n// ToDo\n// Breakpoints for responsive\n// Tests\n// input validation (empty and only numerical)\n\nfunction App() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [darkMode, toggleDarkMode] = useState(false);\n    let theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: darkMode ? 'dark' : 'light',\n                },\n            }),\n        [prefersDarkMode],\n    );\n    theme = responsiveFontSizes(theme);\n    const type = theme.palette.type;\n\n    return (\n          <ThemeProvider theme={theme}>\n              <button onClick={() => toggleDarkMode(true)}>Go Dark</button>\n            <CurrencyConverter themeType={type} />\n          </ThemeProvider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}