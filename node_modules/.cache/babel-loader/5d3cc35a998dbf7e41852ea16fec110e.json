{"ast":null,"code":"var _jsxFileName = \"/Users/reggiemorgan/Dev2020/LeasePlan/lease-plan-currency-converter/src/components/converter/converter.web.js\";\nimport React, { Component } from 'react';\nimport { API_KEY } from '../../constants';\nimport fx from 'money';\nimport axios from 'axios'; // axios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\n\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nclass Converter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currencies: [],\n      result: null,\n      fromCurrency: \"EUR\",\n      toCurrency: \"GBP\",\n      amount: 1\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        const currencyArray = [\"EUR\"];\n        let response = await axios.get('https://api.exchangeratesapi.io/latest?');\n        const rates = response.data.rates;\n        fx.rates = rates;\n        console.log('RATES :: ', rates);\n\n        for (const key in rates) {\n          currencyArray.push(key);\n        }\n\n        currencyArray.sort();\n        this.setState({\n          currencies: currencyArray\n        });\n      } catch (error) {\n        console.log('An error occurred trying to fetch data from the rates API', error);\n      }\n    };\n\n    this.convertHandler = () => {\n      if (this.state.fromCurrency !== this.state.toCurrency) {\n        fx.base = this.state.fromCurrency;\n        let convertedResult = fx.convert(this.state.amount).from(this.state.fromCurrency).to(this.state.toCurrency);\n        console.log('RESULT', convertedResult);\n        this.setState({\n          result: convertedResult\n        }); // axios\n        //     .get(`http://api.exchangeratesapi.io/latest&symbols=${this.state.fromCurrency},${this.state.toCurrency}`)\n        //     .then(response => {\n        //         const result = this.state.amount * (response.data.rates[this.state.toCurrency]);\n        //         this.setState({ result: result.toFixed(5) })\n        //     })\n        //     .catch(err => {\n        //         console.log(\"Opps\", err.message);\n        //     });\n      } else {\n        this.setState({\n          result: \"You cant convert the same currency!\"\n        });\n      }\n    };\n\n    this.selectHandler = event => {\n      if (event.target.name === \"from\") {\n        this.setState({\n          fromCurrency: event.target.value\n        });\n      }\n\n      if (event.target.name === \"to\") {\n        this.setState({\n          toCurrency: event.target.value\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Converter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Currency \"), \" Converter \", React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"money\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"\\uD83D\\uDCB5\"), \" \"), React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"amount\",\n      type: \"text\",\n      value: this.state.amount,\n      onChange: event => this.setState({\n        amount: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"from\",\n      onChange: event => this.selectHandler(event),\n      value: this.state.fromCurrency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.currencies.map(cur => React.createElement(\"option\", {\n      key: cur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, cur))), React.createElement(\"select\", {\n      name: \"to\",\n      onChange: event => this.selectHandler(event),\n      value: this.state.toCurrency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.currencies.map(cur => React.createElement(\"option\", {\n      key: cur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, cur))), React.createElement(\"button\", {\n      onClick: this.convertHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Convert\")), this.state.result && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.result));\n  }\n\n}\n\n;\nexport default Converter;","map":{"version":3,"sources":["/Users/reggiemorgan/Dev2020/LeasePlan/lease-plan-currency-converter/src/components/converter/converter.web.js"],"names":["React","Component","API_KEY","fx","axios","defaults","headers","post","Converter","state","currencies","result","fromCurrency","toCurrency","amount","componentDidMount","currencyArray","response","get","rates","data","console","log","key","push","sort","setState","error","convertHandler","base","convertedResult","convert","from","to","selectHandler","event","target","name","value","render","map","cur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { API_KEY } from '../../constants';\nimport fx from 'money';\nimport axios from 'axios';\n\n// axios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\naxios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nclass Converter extends Component {\n    state = {\n        currencies: [],\n        result: null,\n        fromCurrency: \"EUR\",\n        toCurrency: \"GBP\",\n        amount: 1,\n    };\n\n    componentDidMount = async () => {\n        try {\n            const currencyArray = [\"EUR\"];\n            let response = await axios.get('https://api.exchangeratesapi.io/latest?');\n            const { rates } = response.data;\n            fx.rates = rates;\n            console.log('RATES :: ', rates);\n            for (const key in rates) {\n                currencyArray.push(key);\n            }\n            currencyArray.sort();\n            this.setState({ currencies: currencyArray })\n        } catch(error) {\n            console.log('An error occurred trying to fetch data from the rates API', error);\n        }\n    };\n\n    // Event handler for the conversion\n    convertHandler = () => {\n        if (this.state.fromCurrency !== this.state.toCurrency) {\n            fx.base = this.state.fromCurrency;\n            let convertedResult = fx.convert(this.state.amount).from(this.state.fromCurrency).to(this.state.toCurrency);\n            console.log('RESULT', convertedResult);\n            this.setState({ result: convertedResult });\n            // axios\n            //     .get(`http://api.exchangeratesapi.io/latest&symbols=${this.state.fromCurrency},${this.state.toCurrency}`)\n            //     .then(response => {\n            //         const result = this.state.amount * (response.data.rates[this.state.toCurrency]);\n            //         this.setState({ result: result.toFixed(5) })\n            //     })\n            //     .catch(err => {\n            //         console.log(\"Opps\", err.message);\n            //     });\n        } else {\n            this.setState({ result: \"You cant convert the same currency!\" })\n        }\n    };\n\n    selectHandler = (event) => {\n        if (event.target.name === \"from\") {\n            this.setState({ fromCurrency: event.target.value })\n        }\n        if (event.target.name === \"to\") {\n            this.setState({ toCurrency: event.target.value })\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"Converter\">\n                <h2><span>Currency </span> Converter <span role=\"img\" aria-label=\"money\">&#x1f4b5;</span> </h2>\n                <div className=\"Form\">\n                    <input\n                        name=\"amount\"\n                        type=\"text\"\n                        value={this.state.amount}\n                        onChange={event =>\n                            this.setState({ amount: event.target.value })\n                        }\n                    />\n                    <select\n                        name=\"from\"\n                        onChange={(event) => this.selectHandler(event)}\n                        value={this.state.fromCurrency}\n                    >\n                        {this.state.currencies.map(cur => (\n                            <option key={cur}>{cur}</option>\n                        ))}\n                    </select>\n                    <select\n                        name=\"to\"\n                        onChange={(event) => this.selectHandler(event)}\n                        value={this.state.toCurrency}\n                    >\n                        {this.state.currencies.map(cur => (\n                            <option key={cur}>{cur}</option>\n                        ))}\n                    </select>\n                    <button onClick={this.convertHandler}>Convert</button>\n                </div>\n                {this.state.result &&\n                <h3>{this.state.result}</h3>\n                }\n            </div>\n        )\n    }\n};\n\nexport default Converter;\n"]},"metadata":{},"sourceType":"module"}