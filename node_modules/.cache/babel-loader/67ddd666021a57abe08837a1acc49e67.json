{"ast":null,"code":"var _jsxFileName = \"/Users/reggiemorgan/Dev2020/LeasePlan/lease-plan-currency-converter/src/components/converter/converter.web.js\";\nimport React, { Component } from 'react';\nimport { fetchLatestCurrencies } from '../../api/currency.api';\nimport fx from 'money';\nimport './converter.css';\n\nclass Converter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currencies: [],\n      result: null,\n      fromCurrency: \"EUR\",\n      toCurrency: \"GBP\",\n      amount: 1\n    };\n\n    this.componentDidMount = async () => {\n      const currencyArray = [\"EUR\"];\n      let rates = await fetchLatestCurrencies();\n      fx.rates = rates;\n\n      for (const key in rates) {\n        currencyArray.push(key);\n      }\n\n      currencyArray.sort();\n      this.setState({\n        currencies: currencyArray\n      });\n    };\n\n    this.convertHandler = () => {\n      if (this.state.fromCurrency !== this.state.toCurrency) {\n        fx.base = this.state.fromCurrency;\n        const convertedResult = fx(this.state.amount).from(this.state.fromCurrency).to(this.state.toCurrency);\n        this.setState({\n          result: convertedResult\n        });\n      } else {\n        this.setState({\n          result: \"You cant convert the same currency!\"\n        });\n      }\n    };\n\n    this.selectHandler = event => {\n      if (event.target.name === \"from\") {\n        this.setState({\n          fromCurrency: event.target.value\n        });\n      }\n\n      if (event.target.name === \"to\") {\n        this.setState({\n          toCurrency: event.target.value\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"converter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"TopHalf\",\n      style: {\n        background: 'pink',\n        height: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Currency \"), \" Converter \", React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"money\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\uD83D\\uDCB5\"), \" \"), React.createElement(\"select\", {\n      name: \"from\",\n      onChange: event => this.selectHandler(event),\n      value: this.state.fromCurrency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.currencies.map(cur => React.createElement(\"option\", {\n      key: cur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, cur))), React.createElement(\"input\", {\n      name: \"amount\",\n      type: \"text\",\n      value: this.state.amount,\n      onChange: event => this.setState({\n        amount: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"BottomHalf\",\n      style: {\n        background: 'linear-gradient(90deg, #e3ffe7 0%, #d9e7ff 100%)',\n        height: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"to\",\n      onChange: event => this.selectHandler(event),\n      value: this.state.toCurrency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.currencies.map(cur => React.createElement(\"option\", {\n      key: cur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, cur))), React.createElement(\"button\", {\n      onClick: this.convertHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Convert\")), this.state.result && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.result));\n  }\n\n}\n\n;\nexport default Converter;","map":{"version":3,"sources":["/Users/reggiemorgan/Dev2020/LeasePlan/lease-plan-currency-converter/src/components/converter/converter.web.js"],"names":["React","Component","fetchLatestCurrencies","fx","Converter","state","currencies","result","fromCurrency","toCurrency","amount","componentDidMount","currencyArray","rates","key","push","sort","setState","convertHandler","base","convertedResult","from","to","selectHandler","event","target","name","value","render","background","height","map","cur"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { fetchLatestCurrencies } from '../../api/currency.api';\nimport fx from 'money';\nimport './converter.css';\n\nclass Converter extends Component {\n    state = {\n        currencies: [],\n        result: null,\n        fromCurrency: \"EUR\",\n        toCurrency: \"GBP\",\n        amount: 1,\n    };\n\n    componentDidMount = async () => {\n        const currencyArray = [\"EUR\"];\n        let rates = await fetchLatestCurrencies();\n        fx.rates = rates;\n        for (const key in rates) {\n            currencyArray.push(key);\n        }\n        currencyArray.sort();\n        this.setState({ currencies: currencyArray })\n    };\n\n    convertHandler = () => {\n        if (this.state.fromCurrency !== this.state.toCurrency) {\n            fx.base = this.state.fromCurrency;\n            const convertedResult = fx(this.state.amount).from(this.state.fromCurrency).to(this.state.toCurrency);\n            this.setState({ result: convertedResult });\n        } else {\n            this.setState({ result: \"You cant convert the same currency!\" })\n        }\n    };\n\n    selectHandler = (event) => {\n        if (event.target.name === \"from\") {\n            this.setState({ fromCurrency: event.target.value })\n        }\n        if (event.target.name === \"to\") {\n            this.setState({ toCurrency: event.target.value })\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"converter-container\">\n                    <div className=\"TopHalf\" style={{ background: 'pink', height: '50%'}}>\n                        <h2><span>Currency </span> Converter <span role=\"img\" aria-label=\"money\">&#x1f4b5;</span> </h2>\n                        <select\n                            name=\"from\"\n                            onChange={(event) => this.selectHandler(event)}\n                            value={this.state.fromCurrency}\n                        >\n                            {this.state.currencies.map(cur => (\n                                <option key={cur}>{cur}</option>\n                            ))}\n                        </select>\n                        <input\n                            name=\"amount\"\n                            type=\"text\"\n                            value={this.state.amount}\n                            onChange={event =>\n                                this.setState({ amount: event.target.value })\n                            }\n                        />\n                    </div>\n                    <div className=\"BottomHalf\" style={{ background: 'linear-gradient(90deg, #e3ffe7 0%, #d9e7ff 100%)', height: '50%'}}>\n                        <select\n                            name=\"to\"\n                            onChange={(event) => this.selectHandler(event)}\n                            value={this.state.toCurrency}\n                        >\n                            {this.state.currencies.map(cur => (\n                                <option key={cur}>{cur}</option>\n                            ))}\n                        </select>\n                        <button onClick={this.convertHandler}>Convert</button>\n                    </div>\n                    {this.state.result && <h3>{this.state.result}</h3>}\n            </div>\n        )\n    }\n};\n\nexport default Converter;\n"]},"metadata":{},"sourceType":"module"}